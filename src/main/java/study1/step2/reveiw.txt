안녕하세요!
- Step2는 test가 아니라 src에다 작성해주세요!
- Class는 `파스칼 케이스`로 작성해주세요!
- Method는 `카멜 케이스`로 작성해주세요!
- 현재는 Calculator가 굉장히 많은 역할을 수행하고 있습니다.
  - Calculator에서 Tokenizer와 Operator를 분리해주세요.
  - 지금은 연산자가 4개이지만, 연산자의 갯수가 10개, 100개, 1000개 정도라고 가정하고 객체를 설계해주세요.
- TDD 미션을 수행하는 동안에는 switch/case 문법 사용은 지양해주세요. 마찬가지로 else 사용도 지양해주세요.
  - switch/case를 사용하면 객체지향 생활체조 원칙에 위배되기 때문입니다.
  - else 사용도 마찬가지입니다.

현재 스텝에서 제일 중요한건 Operator를 추상화 하는 것입니다.
객체지향에서 제일 중요한 것은 바로 `역할`과 `책임`을 추출한 후에 각각의 역할을 가지고 있는 객체가 하나의 목표를 위해 협업을 하도록 만드는 것입니다.

좀 이상하게 들릴 수 있겠지만, 코드에다가 인격을 부여한다고 생각해주세요. 지금 calculator가 굉장히 많은 일을 수행하고 있습니다. 업무로 따지면 한 사람이 기획 + 디자인 + 퍼블리싱 + 개발 등 모든 업무를 수행하는 것과 동일합니다.

이러한 업무를 수행하는 사람은 굉장히 빠르게 퇴사하지 않을까요?

마찬가지로 calculator가 너무 많은 일을 하게 되면 병들거나 지치거나 그래서 뭔가 조금만 일이 더 많아지면 (코드가 길어진다고 보시면 되겠죠?) 결국 아예 사용할 수 없는 코드가 될 수 있습니다.

뭔가 주절 주절 설명이 길었는데, 그냥 코드를 하나의 인격으로 봐주세요 ㅎㅎ 거기서 부터 객체지향을 시작할 수 있습니다.